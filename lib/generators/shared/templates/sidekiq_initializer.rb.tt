require 'sidekiq'
require 'redis'
require 'zlib'

APP_NAME =
  if Rails.application.class.respond_to?(:module_parent_name)
    Rails.application.class.module_parent_name
  elsif Rails.application.class.respond_to?(:module_parent)
    Rails.application.class.module_parent.name
  else
    "default_app"
  end

APP_ID = "#{APP_NAME}:#{Rails.env}"

REDIS_HOST = ENV.fetch("REDIS_HOST", "localhost")
REDIS_PORT = ENV.fetch("REDIS_PORT", "6379")
MAX_DB = 15

def find_or_assign_redis_db
  (0..MAX_DB).each do |db|
    redis = Redis.new(host: REDIS_HOST, port: REDIS_PORT, db: db)
    marker = redis.get("sidekiq_app_id")

    return db if marker == APP_ID

    if marker.nil?
      redis.set("sidekiq_app_id", APP_ID)
      Rails.logger.info "[Sidekiq] Assigned Redis DB ##\#{db} to \#{APP_ID}"
      return db
    end
  end

  raise "No free Redis DB available (0..\#{MAX_DB} already taken)"
end

redis_db = ENV["REDIS_DB"] || find_or_assign_redis_db
redis_url = "redis://#{REDIS_HOST}:#{REDIS_PORT}/#{redis_db}"
# Now use redis_url

Sidekiq.configure_server { |config| config.redis = { url: redis_url } }
Sidekiq.configure_client { |config| config.redis = { url: redis_url } }

Rails.logger.info "[Sidekiq] '\#{APP_ID}' using Redis DB ##\#{redis_db}"
